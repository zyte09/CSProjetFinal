<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="food_image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QA6RXhpZgAATU0AKgAAAAgAAwESAAMAAAABAAEAAEAAAAMAAAAB
        ACQAAEABAAEAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCACMAFADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9+KK5r4gfF7w78L5bKLW9Shs7jUvM+yw4LSTCNdztgA7UUFQX
        bCKXQFgXUHi/B37Wtj4vvLeL/hFPFmnLMQZJboWe22QgkOwjuHJBx0QM3IyBXjYziLLcJXWGxFaMZv7N
        9fmunzDfY9ZorI8C+OtM+JPhiDWNHmmuNPuHljRpbaW2kDRyNE6tHKqupV0YYZR09K169enUjOKnB3T1
        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
</value>
  </data>
</root>